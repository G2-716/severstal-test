{"version":3,"sources":["contexts/ProgressContext.js","components/Button/Button.jsx","components/Button/DesktopButton.jsx","components/shared/Text.js","components/screens/Intro.js","questions.config.js","components/QuestionLabel.js","components/RadioButton.js","components/QuestionWrapper.js","utils/getQuestionById.js","components/screens/Final.js","screens.config.js","components/screens/questions/Question1.js","components/screens/questions/Question2.js","components/screens/questions/Question3.js","components/screens/questions/Question4.js","components/screens/questions/Question5.js","components/screens/questions/Question6.js","components/screens/questions/Question7.js","components/screens/questions/Question8.js","components/screens/questions/Question9.js","components/screens/questions/Question10.js","components/App.js","utils/preloadImage.js","index.js"],"names":["ProgressContext","React","createContext","ProgressProvider","Provider","Consumer","ButtonSize","ButtonStyled","styled","button","NextButton","props","size","className","restProps","fullClassName","join","children","ArrowImg","img","DesktopButton","src","process","alt","Text","p","IntroWrapper","div","IntroTitle","h1","InfoWrapper","ImgWrapper","ImageStyled","DesktopButtonStyled","AnswerType","questions","id","text","answers","pointsTo","QuestionLabelStyled","InputStyled","input","RadioIconStyled","LabelStyled","label","TextStyled","span","WrapperStyled","QuestionWrapperStyled","current","total","QuestionBoxStyled","Spacer","value","AnswersBoxStyled","RadioButtonStyled","name","checked","onChange","type","ButtonsBoxStyled","QuestionWrapper","question","useContext","screen","setAnswer","setNext","setPrev","isLocked","setIsLocked","questionNumber","findIndex","item","questionsCount","length","useLayoutEffect","handleAnswerChange","useCallback","answerId","map","answer","key","disabled","onClick","image","getQuestionById","find","FinalWrapper","ResultTitle","LogoWrapper","ScreenType","screens","component","style","height","AppWrapper","DEFAULT_ANSWERS","reduce","res","App","screenParam","URLSearchParams","window","location","search","get","useState","currentScreen","setCurrentScreen","setAnswers","Component","useEffect","nextScreen","clear","document","createElement","position","top","left","body","appendChild","removeChild","preloadImage","progressProviderValue","questionId","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0c1fa2cd.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const ProgressContext = React.createContext(null);\n\nexport const ProgressProvider = ProgressContext.Provider;\nexport const ProgressConsumer = ProgressContext.Consumer;","import React from 'react';\nimport styled from 'styled-components';\n\nexport const ButtonSize = {\n    SM: 'sm',\n    MD: 'md',\n    LG: 'lg',\n};\n\nconst ButtonStyled = styled.button`\n  outline: none;\n  cursor: pointer;\n  transition: all 0.2s;\n  \n  &:disabled {\n    opacity: 0.6;\n    pointer-events: none;\n  }\n`;\n\nexport const Button = props => {\n    const { size, className, ...restProps } = props;\n    const fullClassName = [className, size].join(' ');\n    return (\n        <ButtonStyled {...restProps} className={fullClassName}>\n            {props.children}\n        </ButtonStyled>\n    )\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { Button, ButtonSize } from './Button';\n\nconst arrow = process.env.PUBLIC_URL + '/static/images/desktopArrow.svg';\n\nconst NextButton = styled(Button)`\n  padding: 16px 18px 11px 30px; \n  background: #C3C47E;\n  border: none;\n  font-size: 27px;\n  color: white;\n  text-align: center;\n  \n  &.${ButtonSize.MD} {\n    font-size: 21px;\n  }\n`\n\nconst ArrowImg = styled.img`\n  margin-left: 43px;\n`\n\nexport const DesktopButton = props => {\n    return (\n        <NextButton {...props}>\n            {props.children}\n            <ArrowImg src={arrow} alt=\"next\" />\n        </NextButton>\n    )\n}\n","import styled from \"styled-components\";\n\nexport const Text = styled.p`\n  font-size: 18px;\n  line-height: 113%;\n  letter-spacing: 0.01em;\n`","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport {ProgressContext} from \"../../contexts/ProgressContext\";\nimport {DesktopButton} from \"../Button/DesktopButton\";\nimport {Text} from \"../shared/Text\";\n\nconst intro = process.env.PUBLIC_URL + '/static/images/intro.png';\nconst logo = process.env.PUBLIC_URL + '/static/images/logo.svg';\n\nconst IntroWrapper = styled.div`\n  background-color: #1E1D1C;\n  height: 100vh;\n  width: 100%;\n  padding: 10px 100px;\n  color: #FFFFFF;\n  display: grid;\n  grid-template-columns: 2fr 3fr;\n  grid-template-rows: 100%;\n`;\n\nconst IntroTitle = styled.h1`\n  font-weight: 800;\n  font-size: 90px;\n  line-height: 95%;\n  margin: 65px 0 37px;\n`;\n\nconst InfoWrapper = styled.div`\n  padding-top: 20px;\n`\n\nconst ImgWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  height: 100%;\n  width: 100%;\n`\n\nconst ImageStyled = styled.img`\n  height: 100%;\n  width: auto;\n`\n\nconst DesktopButtonStyled = styled(DesktopButton)`\n  margin-top: 37px;\n`\n\nexport const Intro = props => {\n    const { setNext } = useContext(ProgressContext);\n    return (\n        <IntroWrapper>\n            <InfoWrapper>\n                <img src={logo} alt={''}/>\n                <IntroTitle>Лидер перемен</IntroTitle>\n                <Text>\n                    Кого зовут лидерами перемен? Людей, осставляющих вмятину во Вселенной.\n                    Людей, разрушающих рамки привычного, раздвинающих границы возможного,\n                    объединяющихся друг с другом и меняющих мир.\n                </Text>\n                <br />\n                <Text>\n                    Генри Форд, Мария Кюри,\n                    Стив Джобс и принцесса Диана. Какой лидер перемен ты?\n                    Пройди тест, чтобы узнать!\n                </Text>\n                <DesktopButtonStyled onClick={setNext}>Пройти тест</DesktopButtonStyled>\n            </InfoWrapper>\n            <ImgWrapper>\n                <ImageStyled src={intro} alt={''} />\n            </ImgWrapper>\n        </IntroWrapper>\n    );\n};","export const AnswerType = {\n    Sales: 'sales',\n    Finance: 'finance',\n    Engineering: 'engineering',\n    ProjectOffice: 'projectOffice',\n    Purchases: 'purchases',\n};\n\nexport const questions = [\n    {\n        id: '1',\n        text: 'Если у вас есть возможность стать чемпионом в одном виде спорта, какой вы бы выбрали?',\n        answers: [\n            {\n                id: '1',\n                text: 'Шахматы. Да-да, это спорт!',\n                pointsTo: [AnswerType.Sales],\n            },\n            {\n                id: '2',\n                text: 'Сноуборд/Лыжи',\n                pointsTo: [AnswerType.Finance],\n            },\n            {\n                id: '3',\n                text: 'Бокс',\n                pointsTo: [AnswerType.Engineering],\n            },\n            {\n                id: '4',\n                text: 'Конный спорт',\n                pointsTo: [AnswerType.ProjectOffice],\n            },\n            {\n                id: '5',\n                text: 'Плавание',\n                pointsTo: [AnswerType.Purchases],\n            },\n        ],\n    },\n    {\n        id: '2',\n        text: 'Представь, что в 5 утра тебе звонит староста/ ментор/ руководитель. Как думаешь, что случилось?',\n        answers: [\n            {\n                id: '1',\n                text: 'Он понял, как решить задачу с прошлой пары/по работе, с которой никто не ' +\n                    'справился, теперь звонит всем, рассказывает',\n                pointsTo: [AnswerType.Sales],\n            },\n            {\n                id: '2',\n                text: 'Не может уснуть, хочет с тобой поговорить',\n                pointsTo: [AnswerType.Finance],\n            },\n            {\n                id: '3',\n                text: 'Какая разница, что случилось?! Я хочу спать!',\n                pointsTo: [AnswerType.Engineering],\n            },\n            {\n                id: '4',\n                text: 'Точно случилось что-то чрезвычайно важное, иначе бы не набирал.',\n                pointsTo: [AnswerType.ProjectOffice],\n            },\n            {\n                id: '5',\n                text: 'Меня точно выгнали из университета/с работы!',\n                pointsTo: [AnswerType.Purchases],\n            },\n        ],\n    },\n    {\n        id: '3',\n        text: 'Ты пришел в офис, а там весь день пожарные учения. Что будешь делать?',\n        answers: [\n            {\n                id: '1',\n                text: 'А что, работать надо обязательно в офисе?',\n                pointsTo: [AnswerType.Sales],\n            },\n            {\n                id: '2',\n                text: 'Пойду с коллегами гулять',\n                pointsTo: [AnswerType.Finance],\n            },\n            {\n                id: '3',\n                text: 'Давно хотел сходить на выставку недалеко от работы',\n                pointsTo: [AnswerType.Engineering],\n            },\n            {\n                id: '4',\n                text: 'Досмотрю свой сон дома',\n                pointsTo: [AnswerType.ProjectOffice],\n            },\n            {\n                id: '5',\n                text: 'Пойду есть в соседнем кафе',\n                pointsTo: [AnswerType.Purchases],\n            },\n        ],\n    },\n    {\n        id: '4',\n        text: 'Что тебе больше нравится?',\n        answers: [\n            {\n                id: '1',\n                text: 'Отслеживать техническую сторону проекта',\n                pointsTo: [AnswerType.Sales],\n            },\n            {\n                id: '2',\n                text: 'Разрабатывать новые идеи',\n                pointsTo: [AnswerType.Finance],\n            },\n            {\n                id: '3',\n                text: 'Заниматься всем и сразу',\n                pointsTo: [AnswerType.Engineering],\n            },\n            {\n                id: '4',\n                text: 'Управлять, координировать людей',\n                pointsTo: [AnswerType.ProjectOffice],\n            },\n            {\n                id: '5',\n                text: 'Помогать другим',\n                pointsTo: [AnswerType.Purchases],\n            },\n        ],\n    },\n    {\n        id: '5',\n        text: 'В коллективе появился новый человек. Ты:',\n        answers: [\n            {\n                id: '1',\n                text: 'Я работаю',\n                pointsTo: [AnswerType.Sales],\n            },\n            {\n                id: '2',\n                text: 'Приду с пряниками знакомиться',\n                pointsTo: [AnswerType.Finance],\n            },\n            {\n                id: '3',\n                text: 'Напишу в общем чатике «Вэлкам»',\n                pointsTo: [AnswerType.Engineering],\n            },\n            {\n                id: '4',\n                text: 'Приглашу в бар в пятницу посидеть с коллегами',\n                pointsTo: [AnswerType.ProjectOffice],\n            },\n            {\n                id: '5',\n                text: 'Пересечемся по проекту – будем общаться. Нет – значит не судьба',\n                pointsTo: [AnswerType.Purchases],\n            },\n        ],\n    },\n    {\n        id: '6',\n        text: 'Уже 6й вопрос. Надо подкрепиться. Что выберешь?',\n        answers: [\n            {\n                id: '1',\n                text: 'Пицца',\n                pointsTo: [AnswerType.Sales],\n            },\n            {\n                id: '2',\n                text: 'Запеченная рыба',\n                pointsTo: [AnswerType.Finance],\n            },\n            {\n                id: '3',\n                text: 'Бургер',\n                pointsTo: [AnswerType.Engineering],\n            },\n            {\n                id: '4',\n                text: 'Японская кухня',\n                pointsTo: [AnswerType.ProjectOffice],\n            },\n            {\n                id: '5',\n                text: 'Домашняя еда',\n                pointsTo: [AnswerType.Purchases],\n            },\n        ],\n    },\n    {\n        id: '7',\n        text: 'Надеюсь, тебе было вкусно, у нас тут следующий вопрос. Если офис, то:',\n        answers: [\n            {\n                id: '1',\n                text: 'Многоэтажное здание в центре города',\n                pointsTo: [AnswerType.Sales],\n            },\n            {\n                id: '2',\n                text: 'Просторный лофт рядом с парком',\n                pointsTo: [AnswerType.Finance],\n            },\n            {\n                id: '3',\n                text: 'Удалёнка, чтобы можно было работать из кроватки или кафе',\n                pointsTo: [AnswerType.Engineering],\n            },\n            {\n                id: '4',\n                text: 'Что угодно, главное в другой стране',\n                pointsTo: [AnswerType.ProjectOffice],\n            },\n            {\n                id: '5',\n                text: 'Необычный, современный, концептуальный',\n                pointsTo: [AnswerType.Purchases],\n            },\n        ],\n    },\n    {\n        id: '8',\n        text: 'Переезжаешь, а из техники можно перевезти только 1 вещь. Что возьмешь?',\n        answers: [\n            {\n                id: '1',\n                text: 'Телевизор',\n                pointsTo: [AnswerType.Sales],\n            },\n            {\n                id: '2',\n                text: 'Холодильник',\n                pointsTo: [AnswerType.Finance],\n            },\n            {\n                id: '3',\n                text: 'Кофемашина',\n                pointsTo: [AnswerType.Engineering],\n            },\n            {\n                id: '4',\n                text: 'Микроволновка',\n                pointsTo: [AnswerType.ProjectOffice],\n            },\n            {\n                id: '5',\n                text: 'Стиральная машина',\n                pointsTo: [AnswerType.Purchases],\n            },\n        ],\n    },\n    {\n        id: '9',\n        text: 'В спорах ты обычно:',\n        answers: [\n            {\n                id: '1',\n                text: 'Пытаюсь быстрее закончить разговор, всё равно останусь при своём мнении',\n                pointsTo: [AnswerType.Sales],\n            },\n            {\n                id: '2',\n                text: 'Могу склонить людей на свою точку зрения',\n                pointsTo: [AnswerType.Finance],\n            },\n            {\n                id: '3',\n                text: 'Привожу доказательства своей точки зрениями графиками, цифрами и гуглом',\n                pointsTo: [AnswerType.Engineering],\n            },\n            {\n                id: '4',\n                text: 'Я почти никогда ни с кем не ссорюсь',\n                pointsTo: [AnswerType.ProjectOffice],\n            },\n            {\n                id: '5',\n                text: 'Готов принять другую точку зрения, если меня убедят',\n                pointsTo: [AnswerType.Purchases],\n            },\n        ],\n    },\n    {\n        id: '10',\n        text: 'Есть время почитать. Что возьмешь с полки?',\n        answers: [\n            {\n                id: '1',\n                text: 'Возьму энциклопедию по устройству механизмов, приборов, машин',\n                pointsTo: [AnswerType.Sales],\n            },\n            {\n                id: '2',\n                text: 'Книжка по психологии явно ждёт меня',\n                pointsTo: [AnswerType.Finance],\n            },\n            {\n                id: '3',\n                text: 'Мой утренний New York Times принесли?',\n                pointsTo: [AnswerType.Engineering],\n            },\n            {\n                id: '4',\n                text: 'Охотно читаю научно-популярную, критическую литературу, публицистику',\n                pointsTo: [AnswerType.ProjectOffice],\n            },\n            {\n                id: '5',\n                text: 'Вон ту, с самой красивой обложкой!',\n                pointsTo: [AnswerType.Purchases],\n            },\n        ],\n    },\n];","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst QuestionLabelStyled = styled.div`\n  font-weight: 600;\n  white-space: nowrap;\n  font-size: 18px;\n`;\n\nexport const QuestionLabel = props => {\n    const { current, total, className } = props;\n    return (\n        <QuestionLabelStyled className={className}>\n            Вопрос {current}/{total}\n        </QuestionLabelStyled>\n    );\n};","import React from 'react';\nimport styled from 'styled-components';\n\nconst InputStyled = styled.input`\n  display: none;\n`;\n\nconst RadioIconStyled = styled.div`\n  position: relative;\n  flex-shrink: 0;\n  width: 16px;\n  height: 16px;\n  border: 1px solid rgba(255, 255, 255, 0.57);\n  border-radius: 50%;\n  margin-right: 12px;\n`;\n\nconst LabelStyled = styled.label`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n\n  & ${InputStyled}:checked + ${RadioIconStyled}:after {\n    content: '';\n    position: absolute;\n    top: 1px;\n    left: 1px;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    background-color: #3D8FE3;\n  }\n`;\n\nconst TextStyled = styled.span`\n  margin-top: 0.22em;\n`;\n\nconst WrapperStyled = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  \n  & + & {\n    margin-top: 10px;\n  }\n`;\n\nexport const RadioButton = (props) => {\n    const { name, value, checked, children, onChange, className } = props;\n    return (\n        <WrapperStyled>\n            <LabelStyled className={className}>\n                <InputStyled\n                    type='radio'\n                    name={name}\n                    value={value}\n                    checked={checked}\n                    onChange={() => onChange(value)}\n                />\n                <RadioIconStyled />\n                <TextStyled>{children}</TextStyled>\n            </LabelStyled>\n        </WrapperStyled>\n    )\n};","import React, { useContext, useCallback, useLayoutEffect } from 'react';\nimport styled from 'styled-components';\nimport { questions } from '../questions.config';\nimport { ProgressContext } from '../contexts/ProgressContext';\nimport { QuestionLabel } from \"./QuestionLabel\";\nimport { RadioButton } from './RadioButton';\nimport { DesktopButton } from './Button/DesktopButton';\nimport { ButtonSize } from './Button/Button';\nimport { Text } from './shared/Text';\n\nconst QuestionWrapperStyled = styled.div`\n  display: grid;\n  grid-template-columns: 100px 2fr 3fr 100px;\n  grid-template-rows: 100px 1fr 90px;\n  height: 100%;\n  width: 100%;\n  background-color: #585858;\n`;\n\nconst QuestionLabelStyled = styled(QuestionLabel)`\n  grid-area: 1/2/2/3;\n  align-self: flex-end;\n`;\n\nconst QuestionBoxStyled = styled.div`\n  grid-area: 2/2/3/3;\n  display: flex;\n  flex-direction: column;\n  padding-right: 80px;\n`;\n\nconst Spacer = styled.div`\n  flex-grow: ${({ value }) => value || 1};\n`;\n\nconst AnswersBoxStyled = styled.div`\n  padding-top: 30px;\n`;\n\nconst RadioButtonStyled = styled(RadioButton)`\n  font-size: 16px;\n`;\n\nconst ButtonsBoxStyled = styled.div`\n  margin-top: auto;\n`;\n\nconst ImageStyled = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n  grid-area: 1/3/4/4;\n`;\n\nexport const QuestionWrapper = props => {\n    const { question } = props;\n    const { screen, answers, setAnswer, setPrev, setNext, isLocked, setIsLocked } = useContext(ProgressContext);\n\n    const questionNumber = questions.findIndex(item => item.id === question.id) + 1;\n    const questionsCount = questions.length;\n\n    useLayoutEffect(() => {\n        if (!answers[question.id]) setIsLocked(true);\n        return () => setIsLocked(false);\n    }, []);\n\n    const handleAnswerChange = useCallback((answerId) => {\n        setIsLocked(false);\n        setAnswer(question.id, answerId);\n    }, [question, setAnswer, setIsLocked]);\n\n    return (\n        <QuestionWrapperStyled>\n            <QuestionLabelStyled current={questionNumber} total={questionsCount} />\n            <QuestionBoxStyled>\n                <Spacer value={2} />\n                <Text>{question.text}</Text>\n                <AnswersBoxStyled>\n                    {question.answers.map(answer => (\n                        <RadioButtonStyled\n                            key={answer.id}\n                            name={question.id}\n                            value={answer.id}\n                            checked={answers[question.id] === answer.id}\n                            onChange={handleAnswerChange}\n                        >\n                            {answer.text}\n                        </RadioButtonStyled>\n                    ))}\n                </AnswersBoxStyled>\n                <Spacer value={1} />\n                <ButtonsBoxStyled>\n                    {/*<button onClick={setPrev}>Prev</button>*/}\n                    <DesktopButton\n                        size={ButtonSize.MD}\n                        disabled={isLocked}\n                        onClick={setNext}\n                    >\n                        Дальше\n                    </DesktopButton>\n                </ButtonsBoxStyled>\n            </QuestionBoxStyled>\n            <ImageStyled src={screen.image} alt='' />\n        </QuestionWrapperStyled>\n    );\n};","import { questions } from \"../questions.config\";\n\nexport const getQuestionById = (id) => {\n    return questions.find(question => question.id === id);\n};","import React, { useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport {ProgressContext} from \"../../contexts/ProgressContext\";\nimport {Text} from \"../shared/Text\";\n\nconst resultElon = process.env.PUBLIC_URL + '/static/images/result_Elon.png';\nconst logo = process.env.PUBLIC_URL + '/static/images/logo.svg';\n\nconst FinalWrapper = styled.div`\n  background-color: #1E1D1C;\n  height: 100vh;\n  width: 100%;\n  padding: 75px 100px 0 100px;\n  color: #FFFFFF;\n  display: grid;\n  grid-template-columns: 3fr 2fr;\n  grid-template-rows: 100%;\n`;\nconst ResultTitle = styled.h1`\n  font-weight: 800;\n  font-size: 36px;\n  line-height: 36px;\n  letter-spacing: 0.015em;\n  margin-bottom: 40px;\n`\nconst LogoWrapper = styled.div`\n  position: absolute;\n  width: 196px;\n  height: 61px;\n  top: 60px;\n  right: 45px;\n`\nconst InfoWrapper = styled.div`\n  padding: 180px 0 0 60px;\n`\n\nexport const Final = props => {\n    const { answers } = useContext(ProgressContext);\n    return (\n        <FinalWrapper>\n            <img  style={{height:'100%'}} src={resultElon} alt={''}/>\n            <InfoWrapper>\n                <LogoWrapper>\n                    <img src={logo} alt={''}/>\n                </LogoWrapper>\n                <ResultTitle>Твой результат</ResultTitle>\n                <Text>\n                    Ты точно знаешь, сколько коробок пиццы съедят твои друзья на вечеринке\n                    (и сколько бутылок воды припасти на утро;) ) Тебе не говорили, что ты похож\n                    на основателя Алибабы – Джека Ма?\n                </Text>\n                <br />\n                <Text>\n                    Хочешь, чтобы было так? Проходи отбор на\n                    лидерскую программу компании “Северсталь”\n                </Text>\n            </InfoWrapper>\n        </FinalWrapper>\n    );\n};","import { Intro } from './components/screens/Intro';\nimport { Question1 } from './components/screens/questions/Question1';\nimport { Question2 } from './components/screens/questions/Question2';\nimport { Question3 } from './components/screens/questions/Question3';\nimport { Question4 } from './components/screens/questions/Question4';\nimport { Question5 } from './components/screens/questions/Question5';\nimport { Question6 } from './components/screens/questions/Question6';\nimport { Question7 } from './components/screens/questions/Question7';\nimport { Question8 } from './components/screens/questions/Question8';\nimport { Question9 } from './components/screens/questions/Question9';\nimport { Question10 } from './components/screens/questions/Question10';\nimport { Final } from './components/screens/Final';\n\nconst questionImage1 = process.env.PUBLIC_URL + '/static/images/question-image-1.png';\nconst questionImage2 = process.env.PUBLIC_URL + '/static/images/question-image-2.png';\nconst questionImage3 = process.env.PUBLIC_URL + '/static/images/question-image-3.png';\nconst questionImage4 = process.env.PUBLIC_URL + '/static/images/question-image-4.png';\nconst questionImage5 = process.env.PUBLIC_URL + '/static/images/question-image-5.png';\nconst questionImage6 = process.env.PUBLIC_URL + '/static/images/question-image-6.png';\nconst questionImage7 = process.env.PUBLIC_URL + '/static/images/question-image-7.png';\nconst questionImage8 = process.env.PUBLIC_URL + '/static/images/question-image-8.png';\nconst questionImage9 = process.env.PUBLIC_URL + '/static/images/question-image-9.png';\nconst questionImage10 = process.env.PUBLIC_URL + '/static/images/question-image-10.png';\n\nexport const ScreenType = {\n  Intro: 'intro',\n  Question: 'question',\n  Final: 'final',\n};\n\nexport const screens = [\n  {\n    name: 'intro',\n    component: Intro,\n    type: ScreenType.Intro,\n  },\n  {\n    name: 'question-1',\n    component: Question1,\n    type: ScreenType.Question,\n    image: questionImage1,\n  },\n  {\n    name: 'question-2',\n    component: Question2,\n    type: ScreenType.Question,\n    image: questionImage2,\n  },\n  {\n    name: 'question-3',\n    component: Question3,\n    type: ScreenType.Question,\n    image: questionImage3,\n  },\n  {\n    name: 'question-4',\n    component: Question4,\n    type: ScreenType.Question,\n    image: questionImage4,\n  },\n  {\n    name: 'question-5',\n    component: Question5,\n    type: ScreenType.Question,\n    image: questionImage5,\n  },\n  {\n    name: 'question-6',\n    component: Question6,\n    type: ScreenType.Question,\n    image: questionImage6,\n  },\n  {\n    name: 'question-7',\n    component: Question7,\n    type: ScreenType.Question,\n    image: questionImage7,\n  },\n  {\n    name: 'question-8',\n    component: Question8,\n    type: ScreenType.Question,\n    image: questionImage8,\n  },\n  {\n    name: 'question-9',\n    component: Question9,\n    type: ScreenType.Question,\n    image: questionImage9,\n  },\n  {\n    name: 'question-10',\n    component: Question10,\n    type: ScreenType.Question,\n    image: questionImage10,\n  },\n  {\n    name: 'final',\n    component: Final,\n    type: ScreenType.Final,\n  },\n];","import React from 'react';\nimport { QuestionWrapper } from '../../QuestionWrapper';\nimport { getQuestionById } from '../../../utils/getQuestionById';\n\nexport const Question1 = (props) => {\n    return <QuestionWrapper question={getQuestionById('1')} {...props} />;\n};","import React from 'react';\nimport { QuestionWrapper } from '../../QuestionWrapper';\nimport { getQuestionById } from '../../../utils/getQuestionById';\n\nexport const Question2 = (props) => {\n    return <QuestionWrapper question={getQuestionById('2')} {...props} />;\n};","import React from 'react';\nimport { QuestionWrapper } from '../../QuestionWrapper';\nimport { getQuestionById } from '../../../utils/getQuestionById';\n\nexport const Question3 = (props) => {\n    return <QuestionWrapper question={getQuestionById('3')} {...props} />;\n};","import React from 'react';\nimport { QuestionWrapper } from '../../QuestionWrapper';\nimport { getQuestionById } from '../../../utils/getQuestionById';\n\nexport const Question4 = (props) => {\n    return <QuestionWrapper question={getQuestionById('4')} {...props} />;\n};","import React from 'react';\nimport { QuestionWrapper } from '../../QuestionWrapper';\nimport { getQuestionById } from '../../../utils/getQuestionById';\n\nexport const Question5 = (props) => {\n    return <QuestionWrapper question={getQuestionById('5')} {...props} />;\n};","import React from 'react';\nimport { QuestionWrapper } from '../../QuestionWrapper';\nimport { getQuestionById } from '../../../utils/getQuestionById';\n\nexport const Question6 = (props) => {\n    return <QuestionWrapper question={getQuestionById('6')} {...props} />;\n};","import React from 'react';\nimport { QuestionWrapper } from '../../QuestionWrapper';\nimport { getQuestionById } from '../../../utils/getQuestionById';\n\nexport const Question7 = (props) => {\n    return <QuestionWrapper question={getQuestionById('7')} {...props} />;\n};","import React from 'react';\nimport { QuestionWrapper } from '../../QuestionWrapper';\nimport { getQuestionById } from '../../../utils/getQuestionById';\n\nexport const Question8 = (props) => {\n    return <QuestionWrapper question={getQuestionById('8')} {...props} />;\n};","import React from 'react';\nimport { QuestionWrapper } from '../../QuestionWrapper';\nimport { getQuestionById } from '../../../utils/getQuestionById';\n\nexport const Question9 = (props) => {\n    return <QuestionWrapper question={getQuestionById('9')} {...props} />;\n};","import React from 'react';\nimport { QuestionWrapper } from '../../QuestionWrapper';\nimport { getQuestionById } from '../../../utils/getQuestionById';\n\nexport const Question10 = (props) => {\n    return <QuestionWrapper question={getQuestionById('10')} {...props} />;\n};","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components'\nimport { screens } from '../screens.config';\nimport { questions } from \"../questions.config\";\nimport { ProgressProvider } from \"../contexts/ProgressContext\";\nimport { preloadImage } from '../utils/preloadImage';\n\nconst AppWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nconst DEFAULT_ANSWERS = questions.reduce((res, question) => ({ ...res, [question.id]: null }), {});\n\nfunction App() {\n  /////////////////// for development ////////////////////////////////////\n  const urlParams = new URLSearchParams(window.location.search);\n  const screenParam = urlParams.get('screen');\n  ////////////////////////////////////////////////////////////////////////\n\n  const [currentScreen, setCurrentScreen] = useState(+screenParam || 0);\n  const [answers, setAnswers] = useState(DEFAULT_ANSWERS);\n  const [isLocked, setIsLocked] = useState(false);\n\n  const setPrev = () => {\n    setCurrentScreen(screen => {\n      return (screen > 0 ? screen - 1 : screen);\n    });\n  };\n\n  const setNext = () => {\n    setCurrentScreen(screen => {\n      return (screen < screens.length - 1 ? screen + 1 : screen);\n    });\n  };\n\n  const setAnswer = (questionId, answerId) => {\n    setAnswers(answers => ({ ...answers, [questionId]: answerId }));\n  };\n\n  const { component, ...screen } = screens[currentScreen] || {};\n  const Component = component || (() => null);\n\n  useEffect(() => {\n    const nextScreen = screens[currentScreen + 1];\n    let clear = null;\n    if (nextScreen && nextScreen.image) {\n      clear = preloadImage(nextScreen.image);\n    }\n    return () => clear?.();\n  }, [currentScreen]);\n\n  const progressProviderValue = {\n    screen,\n    answers,\n    setAnswer,\n    setNext,\n    setPrev,\n    isLocked,\n    setIsLocked,\n  };\n\n  return (\n    <AppWrapper>\n      <ProgressProvider value={progressProviderValue}>\n          <Component />\n      </ProgressProvider>\n    </AppWrapper>\n  );\n}\n\nexport default App;\n","export const preloadImage = (src) => {\n  const image = document.createElement('img');\n  image.style.position = 'absolute';\n  image.style.top = '-9999px';\n  image.style.left = '-9999px';\n  image.src = src;\n\n  document.body.appendChild(image);\n\n  return () => document.body.removeChild(image);\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}